#这个配置文件开始使用的是application.properties 文件名，但是一直报错，去连接8888这个端口好的信息
#不知道啥原因

#这个spring.application.name必须和git配置中心仓库里面的文件名一致，例如 application-dev.properties
#如果要连接这个配置文件，则 应用名应该叫application spring.cloud.config.profiles=dev

spring.application.name=application

server.port=1120
# 远程仓库的分支
spring.cloud.config.label=master
# dev 开发环境配置文件 |  test 测试环境  |  pro 正式环境
# 和git里的文件名对应
spring.cloud.config.profile=dev

#spring.cloud.config.uri=http://localhost:1119/

#开启通过服务名去访问服务
spring.cloud.config.discovery.enabled=true
#服务名是config-server
spring.cloud.config.discovery.service-id=ConfigServer


##开启失败快速响应，这样当服务端down的时候，客户端可以快速感知
spring.cloud.config.fail-fast=true

###连接服务端的重试机制
# 配置重试次数，默认为6
spring.cloud.config.retry.max-attempts=6
# 间隔乘数，默认1.1
spring.cloud.config.retry.multiplier=1.1
# 初始重试间隔时间，默认1000ms
spring.cloud.config.retry.initial-interval=1000
# 最大间隔时间，默认2000ms
spring.cloud.config.retry.max-interval=2000

#要配置这个属性，不然手动刷新配置文件不生效
management.endpoints.web.exposure.include=refresh,health,bus-refresh

# rabbitmq 配置
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#开启链路追踪
spring.cloud.bus.enabled=true


#连接eureka的配置
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.health-check-url-path=/actuator/health
eureka.client.registry-fetch-interval-seconds=5
#使用IP和在eureka中的显示形式
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
#连接到eureka
eureka.client.service-url.defaultZone=http://127.0.0.1:1111/eureka/,http://127.0.0.1:1121/eureka/

#tu=test
